{"version":3,"sources":["webpack://library/webpack/universalModuleDefinition","webpack://library/webpack/bootstrap","webpack://library/external \"chalk\"","webpack://library/external \"moment\"","webpack://library/external \"debug\"","webpack://library/external \"qs\"","webpack://library/external \"redis\"","webpack://library/external \"express\"","webpack://library/./src/routes/helpers/redis.js","webpack://library/./src/handlers/index.js","webpack://library/./src/routes/cache.js","webpack://library/./src/redisClient.js","webpack://library/./src/hooks/cache.js","webpack://library/./src/hooks/helpers/path.js","webpack://library/./src/hooks/redis.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","RedisCache","constructor","client","this","clearSingle","Promise","resolve","reject","del","err","reply","clearGroup","lrange","clearAll","then","e","array","length","HTTP_OK","HTTP_NO_CONTENT","HTTP_SERVER_ERROR","HTTP_NOT_FOUND","clearCache","rawTarget","query","url","h","target","decodeURIComponent","hasQueryString","keys","split","slice","join","status","message","cache_HTTP_OK","cache_HTTP_NO_CONTENT","cache_HTTP_SERVER_ERROR","cache_HTTP_NOT_FOUND","cache","app","router","external_express_default","a","Router","req","res","flushall","json","async","statusCode","result","params","end","Array","isArray","debug","external_debug_default","redisClient","cacheOptions","retryInterval","redisOptions","assign","retry_strategy","options","set","undefined","env","external_chalk_default","yellow","external_redis_default","createClient","on","green","defaults","defaultDuration","cache_cache","hook","wrapped","cached","duration","removeCacheInformation","parsePath","config","removePathFromCacheKey","parseNestedRoutes","q","remove","path","id","re","RegExp","match","exec","route","includes","replace","parseNestedPath","external_qs_default","stringify","encode","redis_debug","redis_defaults","immediateCacheKey","extendDuration","before","callback","data","JSON","parse","external_moment_default","expiresOn","format","cyan","cacheKey","multi","expire","after","add","parent","humanize"],"mappings":"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","file":"library.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"library\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"chalk\");","module.exports = require(\"moment\");","module.exports = require(\"debug\");","module.exports = require(\"qs\");","module.exports = require(\"redis\");","module.exports = require(\"express\");","export default class RedisCache {\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n   * scan the redis index\n   */\n  // scan() {\n  //   // starts at 0 if cursor is again 0 it means the iteration is finished\n  //   let cursor = '0';\n\n  //   return new Promise((resolve, reject) => {\n  //     this.client.scan(cursor, 'MATCH', '*', 'COUNT', '100', (err, reply) => {\n  //       if (err) {\n  //         reject(err);\n  //       }\n\n  //       cursor = reply[0];\n  //       if (cursor === '0') {\n  //         resolve(reply[1]);\n  //       } else {\n  //         // do your processing\n  //         // reply[1] is an array of matched keys.\n  //         // console.log(reply[1]);\n  //         return this.scan();\n  //       }\n  //       return false;\n  //     });\n\n  //   });\n  // }\n\n  /**\n   * Async scan of the redis index\n   * Do not for get to passin a Set\n   * myResults = new Set();\n   *\n   * scanAsync('0', \"NOC-*[^listen]*\", myResults).map(\n   *   myResults => { console.log( myResults); }\n   * );\n   *\n   * @param {String} cursor - string '0'\n   * @param {String} patern - string '0'\n   * @param {Set} returnSet - pass a set to have unique keys\n   */\n  // scanAsync(cursor, pattern, returnSet) {\n  //   // starts at 0 if cursor is again 0 it means the iteration is finished\n\n  //   return new Promise((resolve, reject) => {\n  //     this.client.scan(cursor, 'MATCH', pattern, 'COUNT', '100', (err, reply) => {\n\n  //       if (err) {\n  //         reject(err);\n  //       }\n\n  //       cursor = reply[0];\n  //       const keys = reply[1];\n\n  //       keys.forEach((key, i) => {\n  //         returnSet.add(key);\n  //       });\n\n  //       if (cursor === '0') {\n  //         resolve(Array.from(returnSet));\n  //       }\n\n  //       return this.scanAsync(cursor, pattern, returnSet);\n  //     });\n  //   });\n  // }\n\n  /**\n   * Clean single item from the cache\n   * @param {string} key - the key to find in redis\n   */\n  clearSingle(key) {\n    return new Promise((resolve, reject) => {\n      this.client.del(`${key}`, (err, reply) => {\n        if (err) reject(false);\n        if (reply === 1) {\n          resolve(true);\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Clear a group\n   * @param {string} key - key of the group to clean\n   */\n  clearGroup(key) {\n    return new Promise((resolve, reject) => {\n      this.client.lrange(key, 0, -1, (err, reply) => {\n        if (err) {\n          reject(err);\n        }\n        this.clearAll(reply).then(\n          this.client.del(key, (e, r) => {\n            resolve(r === 1);\n          })\n        );\n      });\n    });\n  }\n\n  /**\n   * Clear all keys of a redis list\n   * @param {Object[]} array\n   */\n  clearAll(array) {\n    return new Promise(resolve => {\n      if (!array.length) resolve(false);\n      let i = 0;\n\n      for (i; i < array.length; i++) {\n        this.clearSingle(array[i]).then(r => {\n          if (i === array.length - 1) {\n            resolve(r);\n          }\n        });\n      }\n    });\n  }\n};\n","import RedisCache from '../routes/helpers/redis';\n\nconst HTTP_OK = 200;\nconst HTTP_NO_CONTENT = 204;\nconst HTTP_SERVER_ERROR = 500;\nconst HTTP_NOT_FOUND = 404;\n\nexport function clearCache(rawTarget, query, url, client) {\n  const h = new RedisCache(client);\n\n  let target = decodeURIComponent(rawTarget);\n\n  return new Promise((resolve, reject) => {\n    // Formatted options following ?\n    const hasQueryString = (query && (Object.keys(query).length !== 0));\n\n    // Target should always be defined as Express router raises 404\n    // as route is not handled\n    if (target.length) {\n      if (hasQueryString) {\n        // Keep queries in a single string with the target\n        target = decodeURIComponent(url.split('/').slice(3).join('/'));\n      }\n\n      // Gets the value of a key in the redis client\n      client.get(`${target}`, (err, reply) => {\n        if (err) {\n          resolve({\n            status: HTTP_SERVER_ERROR,\n            message: 'something went wrong' + err.message\n          });\n        } else {\n          // If the key existed\n          if (reply) {\n            // Clear existing cached key\n            h.clearSingle(target).then(r => {\n              resolve({\n                message: `cache cleared for key (${hasQueryString ?\n                  'with' : 'without'} params): ${target}`,\n                status: HTTP_OK\n              });\n            });\n          } else {\n            /**\n             * Empty reply means the key does not exist.\n             * Must use HTTP_OK with express as HTTP's RFC stats 204 should not\n             * provide a body, message would then be lost.\n             */\n            resolve({\n              message: `cache already cleared for key (${hasQueryString ?\n                'with' : 'without'} params): ${target}`,\n              status: HTTP_NO_CONTENT\n            });\n          }\n\n        }\n      });\n    } else {\n      resolve({\n        status: HTTP_NOT_FOUND\n      });\n    }\n  });\n};\n","import express from 'express';\n\nimport RedisCache from './helpers/redis';\nimport { clearCache } from '../handlers';\n\nconst HTTP_OK = 200;\nconst HTTP_NO_CONTENT = 204;\nconst HTTP_SERVER_ERROR = 500;\nconst HTTP_NOT_FOUND = 404;\n\nfunction routes(app) {\n  const router = express.Router();\n  const client = app.get('redisClient');\n  const h = new RedisCache(client);\n\n  router.get('/clear', (req, res) => {\n    client.flushall('ASYNC', () => {\n      res.status(HTTP_OK).json({\n        message: 'Cache cleared',\n        status: HTTP_OK\n      });\n    });\n  }); // clear a unique route\n\n  // clear a unique route\n  router.get('/clear/single/*', async (req, res) => {\n    let statusCode;\n\n    const result = await clearCache(req.params[0], req.query, req.url, client);\n\n    if (result.status === HTTP_NO_CONTENT) {\n      statusCode = HTTP_OK;\n    } else {\n      statusCode = result.status;\n    }\n\n    res.status(statusCode).json(result).end();\n  });\n\n  // clear a group\n  router.get('/clear/group/*', (req, res) => {\n    let target = decodeURIComponent(req.params[0]);\n\n    // Target should always be defined as Express router raises 404\n    // as route is not handled\n    if (target.length) {\n      target = 'group-' + target;\n      // Returns elements of the list associated to the target/key 0 being the\n      // first and -1 specifying get all till the latest\n      client.lrange(target, 0, -1, (err, reply) => {\n        if (err) {\n          res.status(HTTP_SERVER_ERROR).json({\n            message: 'something went wrong' + err.message\n          });\n        } else {\n          // If the list/group existed and contains something\n          if (reply && Array.isArray(reply) && (reply.length > 0)) {\n            // Clear existing cached group key\n            h.clearGroup(target).then(r => {\n              res.status(HTTP_OK).json({\n                message:\n                  `cache cleared for the group key: ${decodeURIComponent(req.params[0])}`,\n                status: HTTP_OK\n              });\n            });\n          } else {\n            /**\n             * Empty reply means the key does not exist.\n             * Must use HTTP_OK with express as HTTP's RFC stats 204 should not\n             * provide a body, message would then be lost.\n             */\n            res.status(HTTP_OK).json({\n              message:\n                `cache already cleared for the group key: ${decodeURIComponent(req.params[0])}`,\n              status: HTTP_NO_CONTENT\n            });\n          }\n        }\n      });\n    } else {\n      res.status(HTTP_NOT_FOUND).end();\n    }\n  });\n\n  // add route to display cache index\n  // this has been removed for performance issues\n  // router.get('/index', (req, res) => {\n  //   let results = new Set();\n\n  //   h.scanAsync('0', '*', results)\n  //     .then(data => {\n  //       res.status(200).json(data);\n  //     })\n  //     .catch(err => {\n  //       res.status(404).json(err);\n  //     });\n\n  // });\n\n  return router;\n}\n\nexport default routes;\n","import redis from 'redis';\nimport chalk from 'chalk';\nimport makeDebug from 'debug';\n\nconst debug = makeDebug('feathers-hooks-rediscache:redisClient');\n\nexport default function redisClient() { // eslint-disable-line no-unused-vars\n  const app = this;\n  const cacheOptions = app.get('redisCache') || {};\n  const retryInterval = cacheOptions.retryInterval || 10000;\n  const redisOptions = Object.assign({}, this.get('redis'), {\n    retry_strategy: function (options) { // eslint-disable-line camelcase\n      app.set('redisClient', undefined);\n      /* istanbul ignore next */\n      if (cacheOptions.env !== 'test') {\n        debug(`${chalk.yellow('[redis]')} not connected`);\n      }\n      return retryInterval;\n    }\n  });\n  const client = redis.createClient(redisOptions);\n\n  app.set('redisClient', client);\n\n  client.on('ready', () => {\n    app.set('redisClient', client);\n    /* istanbul ignore next */\n    if (cacheOptions.env !== 'test') {\n      debug(`${chalk.green('[redis]')} connected`);\n    }\n  });\n  return this;\n}\n","/**\n * After hook - generates a cache object that is needed\n * for the redis hook and the express middelware.\n */\nconst defaults = {\n  defaultDuration: 3600 * 24\n};\n\nexport function cache(options) { // eslint-disable-line no-unused-vars\n  return function (hook) {\n    const cacheOptions = hook.app.get('redisCache');\n\n    options = Object.assign({}, defaults, cacheOptions, options);\n\n    if (!hook.result.hasOwnProperty('cache')) {\n      let cache = {};\n\n      if (Array.isArray(hook.result)) {\n        const array = hook.result;\n\n        cache.wrapped = array;\n        hook.result = {};\n      }\n\n      cache = Object.assign({}, cache, {\n        cached: false,\n        duration: options.duration || options.defaultDuration\n      });\n\n      hook.result.cache = cache;\n    }\n    return Promise.resolve(hook);\n  };\n};\n\nexport function removeCacheInformation(options) { // eslint-disable-line no-unused-vars\n  return function (hook) {\n    if (hook.result.hasOwnProperty('cache')) {\n      delete hook.result.cache;\n    }\n    return Promise.resolve(hook);\n  };\n};\n","import qs from 'qs';\n\nfunction parseNestedPath(path, params) {\n  const re = new RegExp(':([^\\\\/\\\\?]+)\\\\??', 'g');\n\n  let match = null;\n\n  while ((match = re.exec(path)) !== null) {\n    if (Object.keys(params.route).includes(match[1])) {\n      path = path.replace(match[0], params.route[match[1]]);\n    }\n  }\n\n  return path;\n}\n\nfunction parsePath(hook, config = {removePathFromCacheKey: false, parseNestedRoutes: false}) {\n  const q = hook.params.query || {};\n  const remove = config.removePathFromCacheKey;\n  const parseNestedRoutes = config.parseNestedRoutes;\n\n  let path = remove && hook.id ? '' : `${hook.path}`;\n\n  if (!remove && parseNestedRoutes) {\n    path = parseNestedPath(path, hook.params);\n  }\n\n  if (hook.id) {\n    if (path.length !== 0 && !remove) {\n      path += '/';\n    }\n    if (Object.keys(q).length > 0) {\n      path += `${hook.id}?${qs.stringify(q, { encode: false })}`;\n    } else {\n      path += `${hook.id}`;\n    }\n  } else {\n    if (Object.keys(q).length > 0) {\n      path += `?${qs.stringify(q, { encode: false })}`;\n    }\n  }\n\n  return path;\n}\n\nexport { parsePath };\n","import moment from 'moment';\nimport chalk from 'chalk';\nimport { parsePath } from './helpers/path';\nimport makeDebug from 'debug';\n\nconst debug = makeDebug('feathers-hooks-rediscache:redis');\n\nconst defaults = {\n  env: 'production',\n  defaultDuration: 3600 * 24,\n  immediateCacheKey: false,\n  extendDuration: 0\n};\n\nexport function before(options) { // eslint-disable-line no-unused-vars\n  return function (hook) {\n    const cacheOptions = hook.app.get('redisCache');\n\n    options = Object.assign({}, defaults, cacheOptions, options);\n\n    return new Promise(resolve => {\n      const extendDuration = options.extendDuration || options.extendDuration;\n      const client = hook.app.get('redisClient');\n\n      if (!client) {\n        resolve(hook);\n      }\n\n      const path = parsePath(hook, options);\n\n      const callback = (err, reply) => {\n        if (err !== null) resolve(hook);\n        if (reply) {\n          let data = JSON.parse(reply);\n          const duration = moment(data.cache.expiresOn).format('DD MMMM YYYY - HH:mm:ss');\n\n          hook.result = data;\n          resolve(hook);\n\n          /* istanbul ignore next */\n          if (options.env !== 'test') {\n            debug(`${chalk.cyan('[redis]')} returning cached value for ${chalk.green(path)}.`);\n            debug(`> Expires on ${duration}.`);\n          }\n        } else {\n          if (options.immediateCacheKey === true) {\n            hook.params.cacheKey = path;\n          }\n          resolve(hook);\n        }\n      };\n\n      if (extendDuration) {\n        client.multi()\n          .get(path, callback)\n          .expire(path, extendDuration)\n          .exec();\n      } else {\n        client.get(path, callback);\n      }\n    });\n  };\n};\n\nexport function after(options) { // eslint-disable-line no-unused-vars\n  return function (hook) {\n    const cacheOptions = hook.app.get('redisCache');\n\n    options = Object.assign({}, defaults, cacheOptions, options);\n\n    return new Promise(resolve => {\n      if (!hook.result.cache.cached) {\n        const duration = hook.result.cache.duration || options.defaultDuration;\n        const client = hook.app.get('redisClient');\n\n        if (!client) {\n          resolve(hook);\n        }\n\n        const path = hook.params.cacheKey || parsePath(hook, options);\n\n        // adding a cache object\n        Object.assign(hook.result.cache, {\n          cached: true,\n          duration: duration,\n          expiresOn: moment().add(moment.duration(duration, 'seconds')),\n          parent: hook.path,\n          key: path\n        });\n\n        client.set(path, JSON.stringify(hook.result));\n        client.expire(path, hook.result.cache.duration);\n\n        /* istanbul ignore next */\n        if (options.env !== 'test') {\n          debug(`${chalk.cyan('[redis]')} added ${chalk.green(path)} to the cache.`);\n          debug(`> Expires in ${moment.duration(duration, 'seconds').humanize()}.`);\n        }\n      }\n\n      if (hook.result.cache.hasOwnProperty('wrapped')) {\n        const { wrapped } = hook.result.cache;\n\n        hook.result = wrapped;\n      }\n\n      resolve(hook);\n    });\n  };\n};\n\n"],"sourceRoot":""}